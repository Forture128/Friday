import itertoolsfrom forwarder_controller import ForwarderControllerfrom .publish_handler import PublishHandlerclass ESP32Handler:    TOPIC_FORMAT = "%(base_name)s/%(sensor_name)s/%(report_type)s"    BASE_DEVICE_NAME = "esp32"    SENSORS = [        "dht11",        "dht22"    ]    SENSOR_REPORT_TYPES = [        {            "dht11": { "temperature", "heat", "humidity" }        },        {            "dht22": {"temperature", "heat", "humidity"}        }    ]    REPORT_TYPE_MAP = {        "temperature": float,        "heat": float,        "humidity": float,    }    def generate_topic(self, sensor_name, report_type):        return self.TOPIC_FORMAT % {            "base_name": self.BASE_DEVICE_NAME,            "sensor_name": sensor_name,            "report_type": report_type        }    def get_subscription(self):        result = []        for sensor, sensor_type in itertools.product(self.SENSORS,                                                     self.SENSOR_REPORT_TYPES):            for type, report_value in sensor_type.items():                for report_value in report_value:                    result.append(self.generate_topic(sensor, report_value))                    resultList = list(set(result))        return resultList    def handle_for(self, topic, payload):        pub_handler = ForwarderController()        pub_handler.initialize_config(topic, payload, 60)        pub_handler.run()